module x_bit_left_shifter #(
  // parameter declaration, to be set during module instantiation
  // default value given is 8
  SHIFT = 8 : SHIFT > -1 & SHIFT < 32
  )(
    input a[32],
    input shift, //1 or 0 to shift for x module
    output out[32]
  ) {
  
  mux_2 muxes[32];
  var i;
  // module declarations
  // declare your mux_2 (32 of them)
  // other useful variables, e.g: shifted_bits[32] 

  always {
    muxes.s0 = shift;
    for(i=0;i<32;i++){
        muxes.in[i][0] = a[i];
        if(i>=SHIFT){
          muxes.in[i][1] = a[i-SHIFT];  
        }
        else{
          muxes.in[i][1] = b0; 
        }
    }
    
    out[31:0] = muxes.out[31:0]; 
    // for(i=0;i<5;i++){
    //   muxes[i].s0 = shift[i];  
    // }
    // muxes[4][31:0].in[0] = a[31:16];
    // muxes[4][31:16].in[1] = a[15:0];
    // muxes[4][15:0].in[1] = b0;

    // muxes[3][31:0].in[0] = muxes[4][31:0].out;
    // muxes[3][31:16].in[1] = muxes[4][23:8].out;
    // muxes[3][15:8].in[1] = a[7:0];
    // muxes[3][7:0].in[1] = b0;

    // muxes[2][31:0].in[0] = muxes[3].out[31:0];
    // muxes[2][31:8].in[1] = muxes[3].out[27:4];
    // muxes[2][7:4].in[1] = a[3:0];
    // muxes[2][3:0].in[1] = b0;

    // muxes[1][31:0].in[0] = muxes[2].out[31:0];
    // muxes[1][31:4].in[1] = muxes[2].out[29:2];
    // muxes[1][3:2].in[1] = a[1:0];
    // muxes[1][1:0].in[1] = b0;

    // muxes[0][31:0].in[0] = muxes[2].out[31:0];
    // muxes[0][31:1].in[1] = muxes[2].out[30:0];
    // muxes[0][1].in[1] = a[0];
    // muxes[0][0].in[1] = b0;
    
    // out = muxes[0].out
    //TPD = 5*(tpd Mux2)
    //All mux impl with 0 padding
  }
}
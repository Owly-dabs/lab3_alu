module shifter (
    input a[32],
    input b[5],
    input alufn_signal[6],
    output shift[32]
  ) {
  mshl32bit shl32;
  xbitreverse rev32pre(#NBITS(32));
  xbitreverse rev32post(#NBITS(32));
  mux_2 sra_mux_0(.s0(alufn_signal[1]));
  mux_2 sra_mux_1(.s0(alufn_signal[1]));
  always {
    sra_mux_0.in[0] = a[31];
    sra_mux_0.in[1] = 0;
    
    sra_mux_1.in[0] = rev32post.out[31];
    sra_mux_1.in[1] = 0;
    
    
    rev32pre.rev = alufn_signal[0];
    rev32post.rev = alufn_signal[0];
    
    rev32pre.a[31] = sra_mux_0.out;
    rev32pre.a[30:0] = a[30:0];
    
    shl32.b = b;    
    shl32.a = rev32pre.out;

    rev32post.a = shl32.shl;

    shift[31] = sra_mux_1.out;
    shift[30:0] = rev32post.out[30:0];
    
    // default values to silence errors 
    shift = 0;
  }
}
